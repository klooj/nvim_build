---
- name: brew packs
  community.general.homebrew:
    name: "{{ brews }}"
    state: present
    update_homebrew: yes
    upgrade_all: yes
  when: ansible_system == 'Darwin'

- name: apt packs
  apt:
    name: "{{ apts }}"
    state: present
    install_recommends: yes
    update_cache: yes
    # upgrade: dist
  become: yes
  when: ansible_system == 'Linux'

- name: yarn packs
  community.general.yarn:
    path: "{{ nvim_dir }}"
    state: latest
    executable: "{{ exe_yarn }}"
  when: install_yarns

- name: pip packs
  pip:
    requirements: "{{ nvim_dir }}/requirements.txt"
    state: latest
    executable: "{{ exe_pip }}"
  when: install_pips

- name: ruby gems
  community.general.gem:
    name: "{{ item }}"
    state: present
    include_dependencies: yes
    include_doc: yes
    executable: "{{ exe_gem }}"
  with_items: "{{ gems }}"
  become: no
  when: install_gems

- name: perl packs
  community.general.cpanm:
    name: "{{ perls }}"
  when: install_perls

- name: lx cargo
  shell: |
    which rg &>/dev/null || cargo install ripgrep
    which rga &>/dev/null || cargo install ripgrep-all
    which fd &>/dev/null || cargo install fd-find
  args:
    chdir: ~/
    executable: "{{ exe_zsh }}"
  when: ansible_system == 'Linux' and install_cargos

- name: copy fzf script
  copy:
    src: files/fzf_ansible.zsh
    dest: ~/
    owner: "{{ ansible_user_id }}"
    mode: '0777'
  when: ansible_system == 'Linux' and install_fzf

- name: run fzf script
  shell: |
    ./fzf_ansible.zsh
    rm ~/fzf_ansible.zsh
  args:
    chdir: ~/
    executable: "{{ exe_zsh }}"
  when: ansible_system == 'Linux' and install_fzf

- name: create lx opt directory
  file:
    path: /usr/local/opt
    state: directory
    mode: 0750
  become: yes
  when: ansible_system == 'Linux' and lx_opt_packs

- name: link lx opt packs
  file:
    src: "{{ item.path }}"
    dest: "/usr/local/opt/{{ item.name }}"
    state: link
  with_items: "{{ lx_rtp_packs }}"
  when: ansible_system == 'Linux' and lx_opt_packs

...
