---
- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: no
    mode: 0755
  with_items: "{{ nv_dirs }}"
  when: nv_dirs_mk

- include_tasks: tasks/packs.yaml

- name: load ssh formatted git urls
  include_vars: vars/git_ssh.yml
  when: git_method == 'ssh'

- name: load https formatted git urls
  include_vars: vars/git_https.yml
  when: git_method != 'ssh'

- name: clone user config
  ansible.builtin.git:
    repo: "{{ nvrc_url }}"
    dest: "{{ nvim_dir }}"
    version: HEAD
    accept_hostkey: yes
    clone: yes
    force: no
    update: yes
    key_file: "{{ git_key }}"

- name: clone source repo for build
  ansible.builtin.git:
    repo: "{{ nvim_url }}"
    dest: "{{ nvim_build_dir }}"
    version: HEAD
    accept_hostkey: yes
    clone: yes
    update: yes
    key_file: "{{ git_key }}"

- name: clone extra repos ssh
  ansible.builtin.git:
    repo: "{{ 'git@github.com:%s.git' | format(item.repo) }}"
    # repo: "{{  item }}"
    dest: "{{ gits_dir }}/{{ item.name }}"
    version: HEAD
    accept_hostkey: yes
    clone: yes
    update: yes
    key_file: "{{ git_key }}"
  with_items: "{{ gits }}"
  when: git_method == 'ssh' and gits is iterable

- name: clone extra repos https
  ansible.builtin.git:
    repo: "{{ 'https://github.com/%s.git' | format(item.repo) }}"
    dest: "{{ gits_dir }}/{{ item.name }}"
    version: HEAD
    clone: yes
    update: yes
  with_items: "{{ gits }}"
  when: git_method != 'ssh' and gits is iterable

- name: check if we built the binary in the last day
  ansible.builtin.find:
    paths: "{{ install_path }}/bin/nvim"
    age: 1d
  register: days
  when: build_it and (daily_limit is defined) and daily_limit

- include_tasks: tasks/lsp_lua.yaml
  when: >
    (lsp_lua_lx or lsp_lua_mac) and
    ((days is not defined) or days.matched != '0')

- include_tasks: tasks/build.yaml
  when: build_it and ((days is not defined) or days.matched != '0')

...
